import { Destination } from '@sap-cloud-sdk/core';
export interface GetTestDestinationOptions {
    systemsFilePath?: string;
    credentialsFilePath?: string;
}
/**
 * Loads a destination matching the provided alias stored in `systems.json` and `credentials.json`.
 * By default, this function starts looking in the directory the test process has been started in (i.e. '.')
 * and traverses the file hierarchy upwards until it finds a systems.json and credentials.json file.
 * Alternatively, you can supply paths to the systems and the credentials file directly.
 *
 * Throws an error when no systems.json can be found, the alias does not match any of the available destinations,
 * the JSON is malformed or one of the supplied paths is invalid.
 * Does not throw an error when no credentials.json can be found, but will print a warning.
 *
 * @param alias - The alias identifying the destination
 * @param options - References to the `systems.json` and `credentials.json` files
 * @returns An array of destinations
 */
export declare function getTestDestinationByAlias(alias: string, options?: GetTestDestinationOptions): Destination;
/**
 * Loads all destinations stored in `systems.json` and `credentials.json` files.
 *
 * By default, this functions starts looking in the directory the test process has been started in (i.e. '.')
 * and traverses the file hierarchy upwards until it finds a systems.json and credentials.json file.
 * Alternatively, you can supply paths to the systems and the credentials file directly.
 *
 * Throws an error when no systems.json can be found, the JSON is malformed or one of the supplied paths is invalid.
 * Does not throw an error when no credentials.json can be found, but will print a warning.
 *
 * @param options - References to the `systems.json` and `credentials.json` files
 * @returns An array of destinations
 */
export declare function getTestDestinations(options?: GetTestDestinationOptions): Destination[];
//# sourceMappingURL=test-destination-provider.d.ts.map