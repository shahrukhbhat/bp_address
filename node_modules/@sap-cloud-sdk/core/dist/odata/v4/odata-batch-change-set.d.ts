import { EntityV4 } from './entity';
import { CreateRequestBuilderV4, DeleteRequestBuilderV4, UpdateRequestBuilderV4 } from './request-builder';
/**
 * OData batch change set, which holds a collection of write operations.
 */
export declare class ODataBatchChangeSetV4<T extends CreateRequestBuilderV4<EntityV4> | UpdateRequestBuilderV4<EntityV4> | DeleteRequestBuilderV4<EntityV4>> {
    readonly requests: T[];
    readonly changeSetId: string;
    constructor(requests: T[], changeSetId?: string);
}
/**
 * Build the change set payload as the partial payload of the batch request.
 * @param changeSet - Change set holds a collection of write operations.
 * @returns The generated payload from the given change set.
 */
export declare function toBatchChangeSetV4<T extends CreateRequestBuilderV4<EntityV4> | UpdateRequestBuilderV4<EntityV4> | DeleteRequestBuilderV4<EntityV4>>(changeSet: ODataBatchChangeSetV4<T>): string | undefined;
//# sourceMappingURL=odata-batch-change-set.d.ts.map