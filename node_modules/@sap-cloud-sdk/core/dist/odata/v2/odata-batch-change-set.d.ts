import { EntityV2 } from './entity';
import { CreateRequestBuilderV2, DeleteRequestBuilderV2, UpdateRequestBuilderV2 } from './request-builder';
/**
 * OData batch change set, which holds a collection of write operations.
 */
export declare class ODataBatchChangeSetV2<T extends CreateRequestBuilderV2<EntityV2> | UpdateRequestBuilderV2<EntityV2> | DeleteRequestBuilderV2<EntityV2>> {
    readonly requests: T[];
    readonly changeSetId: string;
    constructor(requests: T[], changeSetId?: string);
}
/**
 * Build the change set payload as the partial payload of the batch request.
 * @param changeSet - Change set holds a collection of write operations.
 * @returns The generated payload from the given change set.
 */
export declare function toBatchChangeSetV2<T extends CreateRequestBuilderV2<EntityV2> | UpdateRequestBuilderV2<EntityV2> | DeleteRequestBuilderV2<EntityV2>>(changeSet: ODataBatchChangeSetV2<T>): string | undefined;
export { ODataBatchChangeSetV2 as ODataBatchChangeSet };
export { toBatchChangeSetV2 as toBatchChangeSet };
//# sourceMappingURL=odata-batch-change-set.d.ts.map