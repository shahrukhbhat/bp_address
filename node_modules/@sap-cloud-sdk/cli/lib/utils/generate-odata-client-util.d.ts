/*!
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 */
import { IBooleanFlag, IOptionFlag } from '@oclif/parser/lib/flags';
import { Options } from 'yargs';
import { GeneratorOptionsSDK } from './generator-options';
interface GeneratorOptionCli {
    projectDir: string;
}
declare type KeysToOptions = {
    [optionName in keyof GeneratorOptionCli]: Options;
};
export declare const generatorOptionCli: KeysToOptions;
declare type AllOptions = GeneratorOptionsSDK & GeneratorOptionCli;
declare type FilterBooleanKeys<Base> = {
    [Key in keyof Base]: Base[Key] extends boolean ? Key : never;
};
declare type BoolArgKeys = NonNullable<FilterBooleanKeys<AllOptions>[keyof AllOptions]>;
export declare type BoolArgType = {
    [optionName in BoolArgKeys]: IBooleanFlag<boolean>;
};
declare type StringArgKeys = keyof Omit<AllOptions, BoolArgKeys>;
export declare type StringArgType = {
    [optionName in StringArgKeys]: IOptionFlag<string | undefined>;
};
export declare type FlagsParsed = {
    [Key in keyof AllOptions]: AllOptions[Key] extends boolean ? boolean : string | undefined;
};
export declare function toBooleanFlag(yargsBool: Options): IBooleanFlag<boolean>;
export declare function toStringFlag(yargsString: Options): IOptionFlag<string | undefined>;
export {};
