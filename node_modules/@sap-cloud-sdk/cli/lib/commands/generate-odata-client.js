"use strict";
/*!
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const cli_ux_1 = require("cli-ux");
const execa = require("execa");
const utils_1 = require("../utils");
const generate_odata_client_util_1 = require("../utils/generate-odata-client-util");
class GenerateODataClient extends command_1.Command {
    async run() {
        var _a;
        const { flags } = this.parse(GenerateODataClient);
        const yargsFlags = Object.entries(flags)
            .filter(([key, value]) => typeof value !== 'undefined' && utils_1.generatorOptionsSDK.hasOwnProperty(key))
            .map(([key, value]) => `--${key}=${value}`);
        try {
            await execa('npm', ['ls', '-g', '@sap-cloud-sdk/generator']);
        }
        catch ({ exitCode }) {
            if (exitCode === 1) {
                this.log('');
                this.log('To generate an OData client, it is necessary to install the @sap-cloud-sdk/generator.');
                this.log('For now, the CLI expects the generator to be installed globally.');
                this.log('');
                if (await cli_ux_1.default.confirm('Do you want to install the @sap-cloud-sdk/generator globally? (y|n)')) {
                    await execa('npm', ['install', '--global', '--force', '@sap-cloud-sdk/generator']);
                }
                else {
                    this.error('It is required to have the @sap-cloud-sdk/generator installed globally. Please install and rerun.', { exit: 1 });
                }
            }
        }
        const promise = execa('generate-odata-client', yargsFlags, {
            cwd: flags.projectDir || '.'
        });
        (_a = promise.stdout) === null || _a === void 0 ? void 0 : _a.pipe(process.stdout);
        return promise;
    }
}
exports.default = GenerateODataClient;
GenerateODataClient.description = 'Generates a OData client from a edmx service file definition. For SAP solutions, you can find these definitions at https://api.sap.com/.';
GenerateODataClient.examples = [
    '$ sap-cloud-sdk generate-odata-client -i directoryWithEdmxFiles -o outputDirectory --forceOverwrite',
    '$ sap-cloud-sdk generate-odata-client --help'
];
GenerateODataClient.flags = {
    // Options which are 1:1 to the SDK CLI
    inputDir: generate_odata_client_util_1.toStringFlag(utils_1.generatorOptionsSDK.inputDir),
    outputDir: generate_odata_client_util_1.toStringFlag(utils_1.generatorOptionsSDK.outputDir),
    generateCSN: generate_odata_client_util_1.toBooleanFlag(utils_1.generatorOptionsSDK.generateCSN),
    generateJs: generate_odata_client_util_1.toBooleanFlag(utils_1.generatorOptionsSDK.generateJs),
    generatePackageJson: generate_odata_client_util_1.toBooleanFlag(utils_1.generatorOptionsSDK.generatePackageJson),
    generateTypedocJson: generate_odata_client_util_1.toBooleanFlag(utils_1.generatorOptionsSDK.generateTypedocJson),
    useSwagger: generate_odata_client_util_1.toBooleanFlag(utils_1.generatorOptionsSDK.useSwagger),
    serviceMapping: generate_odata_client_util_1.toStringFlag(utils_1.generatorOptionsSDK.serviceMapping),
    writeReadme: generate_odata_client_util_1.toBooleanFlag(utils_1.generatorOptionsSDK.writeReadme),
    additionalFiles: generate_odata_client_util_1.toStringFlag(utils_1.generatorOptionsSDK.additionalFiles),
    clearOutputDir: generate_odata_client_util_1.toBooleanFlag(utils_1.generatorOptionsSDK.clearOutputDir),
    aggregatorDirectoryName: generate_odata_client_util_1.toStringFlag(utils_1.generatorOptionsSDK.aggregatorDirectoryName),
    aggregatorNpmPackageName: generate_odata_client_util_1.toStringFlag(utils_1.generatorOptionsSDK.aggregatorNpmPackageName),
    sdkAfterVersionScript: generate_odata_client_util_1.toBooleanFlag(utils_1.generatorOptionsSDK.sdkAfterVersionScript),
    s4hanaCloud: generate_odata_client_util_1.toBooleanFlag(utils_1.generatorOptionsSDK.s4hanaCloud),
    forceOverwrite: generate_odata_client_util_1.toBooleanFlag(utils_1.generatorOptionsSDK.forceOverwrite),
    // Options related to the CLI some of them are mapped to SDK CLI attributes
    projectDir: generate_odata_client_util_1.toStringFlag(generate_odata_client_util_1.generatorOptionCli.projectDir)
};
